{"version":3,"sources":["assets lazy /^/.*$/ groupOptions: {} namespace object","features/products/catalog.ts","features/products/productSlice.ts","features/basket/basketSlice.ts","features/products/Products.tsx","features/basket/Basket.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","catalog","sku","name","description","pricePerKg","pricePerUnit","priceDisplayed","picture","initialState","products","productSlice","createSlice","reducers","selectProducts","state","basketSlice","addItem","action","filter","payload","uuid","uuidv4","foundItem","undefined","push","removeItem","actions","selectBasket","Products","useSelector","className","product","key","ProductCard","useState","picSrc","setPicSrc","dispatch","useDispatch","useEffect","src","default","alt","type","onClick","aria-label","Basket","basket","reduce","acc","curr","App","role","store","configureStore","reducer","productsReducer","basketReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.876e33c3.chunk.js","sourcesContent":["var map = {\n\t\"./Beans.png\": [\n\t\t29,\n\t\t3\n\t],\n\t\"./Coke.png\": [\n\t\t30,\n\t\t4\n\t],\n\t\"./Oranges.jpg\": [\n\t\t31,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 24;\nmodule.exports = webpackAsyncContext;","export interface Product {\r\n  sku: string\r\n  name: string\r\n  description: string\r\n  priceDisplayed: string\r\n  pricePerUnit: number | null\r\n  pricePerKg: number | null\r\n  picture: string\r\n}\r\n\r\nexport const beans: Product = {\r\n  sku: '1',\r\n  name: 'Beans',\r\n  description: 'is a perfect addition to your dishes. Bring protein, fiber and flavor to your favorite recipes.',\r\n  pricePerKg: null,\r\n  pricePerUnit: 0.50,\r\n  priceDisplayed: '0.50',\r\n  picture: 'Beans.png'\r\n}\r\nexport const coke: Product = {\r\n  sku: '2',\r\n  name: 'Coke',\r\n  description: 'is crisp, delicious taste with Beans, on the go, or to share. Serve ice cold for maximum refreshment.',\r\n  pricePerKg: null,\r\n  pricePerUnit: 0.70,\r\n  priceDisplayed: '0.70',\r\n  picture: 'Coke.png'\r\n}\r\nexport const oranges: Product = {\r\n  sku: '3',\r\n  name: 'Oranges',\r\n  description: 'are not intended to diagnose, treat, cure, or prevent any disease or health condition.',\r\n  pricePerKg: 1.99,\r\n  priceDisplayed: '1.99',\r\n  pricePerUnit: null,\r\n  picture: 'Oranges.jpg'\r\n}\r\n\r\nexport const catalog: Product[] = [\r\n  beans,\r\n  coke,\r\n  oranges\r\n]","import { createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { Product, catalog } from './catalog'\r\n\r\ninterface ProductsState {\r\n  products: Product[];\r\n}\r\n\r\nconst initialState: ProductsState = {\r\n  products: catalog\r\n};\r\n\r\nexport const productSlice = createSlice({\r\n  name: 'products',\r\n  initialState,\r\n  reducers: {}, // No actions on the catalog.\r\n});\r\n\r\nexport const selectProducts = (state: RootState) => state.products\r\n\r\nexport default productSlice.reducer;\r\n","import { catalog } from './../products/catalog';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { Product } from '../products/catalog'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport type BasketItem = Pick<Product, 'sku' | 'name' | 'pricePerKg' | 'pricePerUnit' | 'priceDisplayed'> & { uuid: string }\r\n\r\nexport type BasketState = BasketItem[]\r\n\r\nconst initialState: BasketState = []\r\n\r\nexport const basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    // { type: 'basket/addItem', payload: '1' }\r\n    addItem: (state, action: PayloadAction<Product['sku']>) => {\r\n      const [foundItem] = catalog\r\n        .filter(({ sku }) => sku === action.payload)\r\n        .map(({ sku, name, pricePerKg, pricePerUnit, priceDisplayed }) => ({ sku, name, pricePerKg, pricePerUnit, priceDisplayed, uuid: uuidv4() }))\r\n      if (foundItem?.sku !== undefined) state.push(foundItem)\r\n    },\r\n    // { type: 'basket/removeItem', payload: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d' }\r\n    removeItem: (state, action: PayloadAction<string>) => {\r\n      return state.filter(({ uuid }) => uuid !== action.payload)\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addItem, removeItem } = basketSlice.actions;\r\n\r\nexport const selectBasket = (state: RootState) => state;\r\n\r\nexport default basketSlice.reducer;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Product } from './catalog'\r\nimport { selectProducts } from './productSlice'\r\nimport './products.css'\r\nimport { addItem } from '../basket/basketSlice'\r\n\r\ninterface IProducts {\r\n\r\n}\r\n\r\nexport const Products: React.FC<IProducts> = () => {\r\n  const { products } = useSelector(selectProducts)\r\n\r\n  return (\r\n    <section className=\"products\"> {\r\n      products.map((product: Product) =>\r\n        <ProductCard key={ product.sku } { ...product } />\r\n      )\r\n    }</section>\r\n  )\r\n}\r\n\r\nexport const ProductCard: React.FC<Product> = ({ sku, name, description, pricePerKg, priceDisplayed, picture }) => {\r\n  const [picSrc, setPicSrc] = useState()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    import(`../../assets/${ picture }`).then(src => {\r\n      setPicSrc(src.default)\r\n    })\r\n  }, [picture])\r\n\r\n  return (\r\n    <article className=\"nes-container is-rounded card\">\r\n      <div className=\"card__header\">\r\n        <figure className=\"card__figure\">\r\n          <img src={ picSrc } alt={ name } className=\"card__image\" />\r\n        </figure>\r\n      </div>\r\n      <div className=\"card__body\">\r\n        <h2 className=\"card__title\">{ name }</h2>\r\n        <h3 className=\"card__price\">\r\n          <button className=\"nes-badge is-splited\">\r\n            <span className=\"is-dark\"><i className=\"nes-icon coin is-small\"></i>{ pricePerKg ? '/kg' : '' }</span>\r\n            <span className=\"is-success\">{ priceDisplayed }</span>\r\n          </button>\r\n        </h3>\r\n        <p className=\"card__copy\">\r\n          Beans and Coke <span className=\"nes-text is-primary\">{ name }</span> { description }\r\n        </p>\r\n      </div>\r\n      <footer className=\"card__footer\">\r\n        <div className=\"card__actions\">\r\n          <button type=\"button\" onClick={ () => dispatch(addItem(sku)) } className=\"button nes-btn is-primary\" aria-label={`add ${name} to basket`}>\r\n            Add to basket\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </article>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './basket.css'\r\nimport { removeItem, selectBasket } from './basketSlice'\r\n\r\ninterface IBasket {\r\n\r\n}\r\n\r\nexport const Basket: React.FC<IBasket> = () => {\r\n  const { basket } = useSelector(selectBasket)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <section className=\"basket nes-table-responsive\">\r\n      <div className=\"nes-container is-rounded with-title\">\r\n        <p className=\"title\">Basket</p>\r\n        <div className=\"lists\">\r\n          <ul className=\"nes-list is-disc\">\r\n            { basket.map(({ uuid, name, priceDisplayed }) => (\r\n              <li key={ uuid }>\r\n                <button type=\"button\" onClick={ () => dispatch(removeItem(uuid)) } className=\"nes-btn\"><i className=\"nes-icon close is-small\"></i></button>\r\n                { name } { ' ' }\r\n                <span className=\"nes-text is-success\">{ priceDisplayed }</span>\r\n              </li>\r\n            )) }\r\n            <li>----</li>\r\n            <li>Sub-total <span className=\"nes-text is-success\">{\r\n              basket.reduce((acc, curr) => (curr.pricePerKg || curr.pricePerUnit || 0) + acc, 0)\r\n            }</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}","import React from 'react';\r\nimport { Products } from './features/products/Products';\r\nimport { Basket } from './features/basket/Basket';\r\n\r\nimport 'nes.css/css/nes.min.css';\r\nimport './App.css';\r\n\r\nexport const App: React.FC = () => {\r\n  return (\r\n    <main className=\"nes-container is-rounded\">\r\n      <header>\r\n        <h1>Beans<span role=\"img\" aria-label=\"and\">➕</span>Coke</h1>\r\n        <p>At beans and coke, we love beans and we love coke. More than just a meat substitute, beans are so nutritious that the latest dietary guidelines recommend we triple our current intake from 1 to 3 cups per week.</p>\r\n        <p>Add a glass of coke, because Together Tastes Better.</p>\r\n      </header>\r\n      <article>\r\n        <Products />\r\n        <Basket />\r\n      </article>\r\n    </main>\r\n  );\r\n}\r\n\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport productsReducer from '../features/products/productSlice'\r\nimport basketReducer from '../features/basket/basketSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    products: productsReducer,\r\n    basket: basketReducer\r\n  },\r\n});\r\n\r\nexport const testState = {\r\n  basket: [],\r\n  products: {\r\n    products: [\r\n    ]\r\n  }\r\n}\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}